name: Demo

on:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "staging" ]

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
      should-deploy: ${{ steps.env.outputs.should-deploy }}
      should-destroy: ${{ steps.env.outputs.should-destroy }}
    steps:
      - name: Set environment
        id: env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "should-deploy=true" >> $$GITHUB_OUTPUT
            echo "should-destroy=false" >> $$GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "should-deploy=false" >> $$GITHUB_OUTPUT
            echo "should-destroy=true" >> $$GITHUB_OUTPUT
          else
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "should-deploy=true" >> $$GITHUB_OUTPUT
            echo "should-destroy=false" >> $$GITHUB_OUTPUT
          fi
  build-docker:
    runs-on: ubuntu-latest
    needs: determine-environment
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: echo
        run: |
          echo "building docker for ${{ needs.determine-environment.outputs.environment }}"
  test:
    runs-on: ubuntu-latest
    needs: [ build-docker, determine-environment ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: echo
        run: |
          echo "testing for ${{ needs.determine-environment.outputs.environment }}"
  push-docker:
    runs-on: ubuntu-latest
    needs: [ test, determine-environment ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: echo
        run: |
          echo "push docker to registry for ${{ needs.determine-environment.outputs.environment }}"
  deploy:
    runs-on: ubuntu-latest
    needs: [ push-docker, determine-environment ]
    if: needs.determine-environment.outputs.should-deploy == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: echo
        run: |
          echo "deploying to ${{ needs.determine-environment.outputs.environment }}"
  destroy:
    runs-on: ubuntu-latest
    needs: [ determine-environment, deploy ]
    if: needs.determine-environment.outputs.should-destroy == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: echo
        run: |
          echo "destroying ${{ needs.determine-environment.outputs.environment }}"